<UserControl x:Class="GAPPSF.UIControls.CacheList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:properties="clr-namespace:GAPPSF.Core"
             xmlns:src="clr-namespace:GAPPSF.UIControls" 
             xmlns:p="clr-namespace:GAPPSF.Core"
             xmlns:c="clr-namespace:GAPPSF.Clipboard"
             xmlns:l="clr-namespace:GAPPSF.Localization"
             xmlns:osc="clr-namespace:OpenSourceControls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <src:PathConverter x:Key="ConvertToPath"></src:PathConverter>
        <src:CompassPathConverter x:Key="ConvertToCompassPath"></src:CompassPathConverter>
        <src:ContainerConverter x:Key="ContainerConverter"></src:ContainerConverter>
        <src:GeocacheCoordConverter x:Key="GeocacheCoordConverter"></src:GeocacheCoordConverter>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Modifiers="Control" Key="Delete" Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Expander
                Grid.Row="0"
            Header="{l:Translate Settings}"
                
            HorizontalAlignment="Stretch">
            <Expander.Background>
                <SolidColorBrush Color="{DynamicResource SettingsBkColor}"/>
            </Expander.Background>
            <Expander.Content>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0">
                        <CheckBox  Margin="4" Content="{l:Translate ShowSelectedOnly}" IsChecked="{Binding CacheListShowSelectedOnly, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
                        <CheckBox  Margin="4" Content="{l:Translate ShowFlaggedOnly}" IsChecked="{Binding CacheListShowFlaggedOnly, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock  Grid.Column="0" Text="{l:Translate Filter}" Margin="4" />
                            <TextBox Margin="4" Text="{Binding CacheListFilterText, Source={x:Static p:Settings.Default}, Mode=TwoWay, Delay=500, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" />
                        </Grid>
                        <Button Command="{Binding InvertSelectionCommand}"  Margin="4">
                            <Image Source="/Resources/General/invert_selection.png" />
                        </Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock  Grid.Column="0" Text="{l:Translate FreezeColumns}" Margin="4" />
                            <src:NumericUpDown Grid.Column="1" Width="50" Minimum="0" Maximum="5" Value="{Binding CacheListFrozenColumnCount, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
                        </Grid>
                    </StackPanel>
                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <CheckBox Margin="4" Content="{l:Translate AutomaticSort}" IsChecked="{Binding CacheListEnableAutomaticSorting, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
                        <ListView Margin="4" Grid.Row="1" ItemsSource="{Binding ColumnInfoCollection}">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="4" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Visible}" Content="{Binding Path=Name}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListView>
                    </Grid>
                    <Expander Grid.Row="1" Grid.ColumnSpan="2" Header="{l:Translate Colors}">
                        <Expander.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{l:Translate Archived}" Margin="4"/>
                                <osc:ComboColorPicker Grid.Row="0" Grid.Column="1" Width="120" x:Name="ColorPickerArchived" ColorChanged="ColorPickerArchived_ColorChanged" Margin="4" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{l:Translate Disabled}" Margin="4"/>
                                <osc:ComboColorPicker Grid.Row="1" Grid.Column="1" Width="120" x:Name="ColorPickerDisabled" ColorChanged="ColorPickerDisabled_ColorChanged" Margin="4" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{l:Translate Own}" Margin="4"/>
                                <osc:ComboColorPicker Grid.Row="2" Grid.Column="1" Width="120" x:Name="ColorPickerOwn" ColorChanged="ColorPickerOwn_ColorChanged" Margin="4" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="{l:Translate Found}" Margin="4"/>
                                <osc:ComboColorPicker Grid.Row="3" Grid.Column="1" Width="120" x:Name="ColorPickerFound" ColorChanged="ColorPickerFound_ColorChanged" Margin="4" HorizontalAlignment="Left"/>
                            </Grid>
                        </Expander.Content>
                    </Expander>
                </Grid>
            </Expander.Content>
        </Expander>
        <DataGrid Grid.Row="1"
                VirtualizingStackPanel.VirtualizationMode="Recycling"  
                  AutoGenerateColumns="False" 
                  VerticalAlignment="Stretch" 
                  Name="cacheList" HorizontalAlignment="Stretch" 
                  HorizontalScrollBarVisibility="Visible" 
                  CanUserAddRows="False" 
                  CanUserDeleteRows="False"
                  FrozenColumnCount="{Binding CacheListFrozenColumnCount, Source={x:Static p:Settings.Default}}"
                  ItemsSource="{Binding Source={x:Static p:ApplicationData.Instance}, Path=ActiveDatabase.GeocacheCollectionView}"
                  SelectedItem="{Binding Source={x:Static p:ApplicationData.Instance}, Path=ActiveGeocache, Mode=TwoWay}"
                  LoadingRow="cacheList_LoadingRow" ColumnReordered="cacheList_ColumnReordered"
                  >
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Archived}" Value="True">
                            <Setter Property="Background" Value="{Binding ArchivedRowColor, Source={x:Static p:Settings.Default}}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Available}" Value="False">
                            <Setter Property="Background" Value="{Binding DisabledRowColor, Source={x:Static p:Settings.Default}}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Found}" Value="True">
                            <Setter Property="Background" Value="{Binding FoundRowColor, Source={x:Static p:Settings.Default}}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsOwn}" Value="True">
                            <Setter Property="Background" Value="{Binding IsOwnRowColor, Source={x:Static p:Settings.Default}}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{l:Translate InvertSelection}" Command="{Binding InvertSelectionCommand}" />
                    <Separator />
                    <MenuItem Header="{l:Translate Copy}" Command="{Binding CopyCommand}" />
                    <MenuItem Header="{l:Translate Paste}" Command="{Binding PasteCommand, Source={x:Static c:ClipboardHandler.Instance}}" />
                    <Separator />
                    <MenuItem Header="{l:Translate Delete}" Command="{Binding DeleteCommand}" InputGestureText="Ctrl+Del" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=Header}"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{l:Translate S}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Selected, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{l:Translate F}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Flagged, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{l:Translate T}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Path=GeocacheType, Converter={StaticResource ConvertToPath}}" Width="16" Height="16"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding DistanceToCenterKilometers, StringFormat=\{0:0.0\}}" Header="{l:Translate Km}"  IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding DistanceToCenterMiles, StringFormat=\{0:0.0\}}" Header="{l:Translate Miles}"  IsReadOnly="True" Visibility="Hidden"/>
                <DataGridTemplateColumn Header="{l:Translate D}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Path=AngleToCenter, Converter={StaticResource ConvertToCompassPath}}" Width="16" Height="16"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Code}" Header="{l:Translate Code}" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Name}" Header="{l:Translate Name}" Width="{Binding ColumnNameWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}" />
                <DataGridTextColumn Binding="{Binding Owner}" Header="{l:Translate Owner}" Width="{Binding ColumnOwnerWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding PublishedTime, StringFormat=\{0:d\}}" Header="{l:Translate Published}"  />
                <DataGridTextColumn Binding="{Binding Favorites}" Header="{l:Translate Fav}" />
                <DataGridTextColumn Binding="{Binding Country}" Header="{l:Translate Country}" Width="{Binding ColumnCountryWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding State}" Header="{l:Translate State}" Width="{Binding ColumnStateWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding Municipality}" Header="{l:Translate Municipality}" Width="{Binding ColumnMunicipalityWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding City}" Header="{l:Translate City}" Visibility="Hidden" Width="{Binding ColumnCityWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding Difficulty, StringFormat=\{0:0.#\}}" Header="{l:Translate Diff}"  />
                <DataGridTextColumn Binding="{Binding Terrain, StringFormat=\{0:0.#\}}" Header="{l:Translate Terr}" />
                <DataGridCheckBoxColumn Binding="{Binding MemberOnly}" Header="{l:Translate PMO}" />
                <DataGridCheckBoxColumn Binding="{Binding ContainsNote, Mode=OneWay}" Header="{l:Translate Note}"  IsReadOnly="True" />
                <DataGridCheckBoxColumn Binding="{Binding ContainsCustomLatLon, Mode=OneWay}" Header="{l:Translate AddCoords}"  IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding FoundDate, StringFormat=\{0:d\}}" Header="{l:Translate Found}"  IsReadOnly="True" />
                <DataGridTemplateColumn Header="{l:Translate Container}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Path=Container, Converter={StaticResource ContainerConverter}}" Width="45" Height="12"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{l:Translate Available}" Visibility="Hidden">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Available, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{l:Translate Archived}" Visibility="Hidden">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Archived, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{l:Translate Locked}" Visibility="Hidden">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Locked, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Binding="{Binding HasUserWaypoints, Mode=OneWay}" Header="{l:Translate UserWaypoints}"  IsReadOnly="True" Visibility="Hidden"  />
                <DataGridTextColumn Binding="{Binding PersonalNote}" Header="{l:Translate PersonalNotes}" Visibility="Hidden" Width="{Binding ColumnPersonalNoteWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding DataFromDate, StringFormat=\{0:d\}}" Header="{l:Translate DateOfData}"  IsReadOnly="True" Visibility="Hidden" />
                <DataGridTextColumn Binding="{Binding GeocacheType}" Header="{l:Translate Type}" IsReadOnly="True" Visibility="Hidden" />
                <DataGridTextColumn Binding="{Binding EncodedHints, Mode=OneWay}" Header="{l:Translate Hints}" Visibility="Hidden" Width="{Binding ColumnEncodedHintsWidth, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                <DataGridTextColumn Binding="{Binding WaypointInfoString, Mode=OneWay}" Header="{l:Translate Waypoints}" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Path=., Converter={StaticResource GeocacheCoordConverter}}" Header="{l:Translate Coordinates}" IsReadOnly="True" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding GeocacheDistance, StringFormat=\{0:0.0\}}" Header="{l:Translate Distance}" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding GCVoteMedian, StringFormat=\{0:0.0\}}" IsReadOnly="True" Header="{l:Translate GCVoteMedian}" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding GCVoteAverage, StringFormat=\{0:0.0\}}" IsReadOnly="True" Header="{l:Translate GCVoteAverage}" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding GCVoteCount}" IsReadOnly="True" Header="{l:Translate GCVoteCount}" Visibility="Hidden"/>
                <DataGridTextColumn Binding="{Binding GCVoteUser, StringFormat=\{0:0.0\}}" IsReadOnly="True" Header="{l:Translate GCVoteUser}" Visibility="Hidden"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
