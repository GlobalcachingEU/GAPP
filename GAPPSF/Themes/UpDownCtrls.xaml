<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:GAPPSF.UIControls"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.classic"
    x:Name="MyArrowButton">
    <local:ThicknessToMarginConverter x:Key="ThicknessToMarginConverter" />
     <Style TargetType="{x:Type local:ArrowRepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ArrowRepeatButton}">
                    <Grid Name="ButtonGrid" Margin="0,0,0,0">
                        <Microsoft_Windows_Themes:ClassicBorderDecorator
                                  Name="ClassicBorder"
                                  Background="{TemplateBinding Panel.Background}"
                                  BorderStyle="AltRaised"
                                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                                  BorderThickness="2,2,3,3"
                                  SnapsToDevicePixels="True">
                        </Microsoft_Windows_Themes:ClassicBorderDecorator>
                        <Path Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-1,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RepeatButton.IsPressed" Value="true">
                            <Setter TargetName="ClassicBorder" Property="BorderStyle" Value="AltPressed" />
                            <Setter TargetName="ClassicBorder" Property="BorderThickness" Value="2,2,3,3" />
                            <Setter TargetName="Arrow" Property="Margin" Value="2,3,0,0" />
                        </Trigger>
                        <Trigger Property="RepeatButton.IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="#A0A0A0" />
                        </Trigger>
                        <Trigger Property="ButtonArrowType" Value="Down">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 3.5 4 L 7 0 Z" />
                        </Trigger>
                        <Trigger Property="ButtonArrowType" Value="Up">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 2 L 3.5 -2 L 7 2 Z" />
                        </Trigger>
                        <Trigger Property="ButtonArrowType" Value="Left">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 3.5 L 4 -3.5 Z" />
                        </Trigger>
                        <Trigger Property="ButtonArrowType" Value="Right">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 3.5 L 4 0 L 0 -3.5 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Other theme specific values here (that is, that are not used by RepeatArrowBotton) -->
    <Style x:Key="UpDownButtonsStyle" TargetType="{x:Type local:UpDownButtons}">
        <Setter Property="Margin" Value="{Binding BorderThickness, ElementName=TextBoxCtrl}"/>
    </Style>
    <Style x:Key="TimeCtrlsGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="{Binding ElementName=TextBoxCtrl, 
                                Path=BorderThickness,
                                Converter={StaticResource ThicknessToMarginConverter},
                                ConverterParameter=true}"/>
    </Style>
</ResourceDictionary>