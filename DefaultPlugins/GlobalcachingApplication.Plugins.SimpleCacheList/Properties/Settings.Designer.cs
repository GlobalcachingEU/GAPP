//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GlobalcachingApplication.Plugins.SimpleCacheList.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeNeeded {
            get {
                return ((bool)(this["UpgradeNeeded"]));
            }
            set {
                this["UpgradeNeeded"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color BkColorAvailable {
            get {
                return ((global::System.Drawing.Color)(this["BkColorAvailable"]));
            }
            set {
                this["BkColorAvailable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color BkColorArchived {
            get {
                return ((global::System.Drawing.Color)(this["BkColorArchived"]));
            }
            set {
                this["BkColorArchived"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("WhiteSmoke")]
        public global::System.Drawing.Color BkColorNotAvailable {
            get {
                return ((global::System.Drawing.Color)(this["BkColorNotAvailable"]));
            }
            set {
                this["BkColorNotAvailable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0, 0, 0")]
        public global::System.Drawing.Rectangle WindowPos {
            get {
                return ((global::System.Drawing.Rectangle)(this["WindowPos"]));
            }
            set {
                this["WindowPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("192, 255, 192")]
        public global::System.Drawing.Color BkColorFound {
            get {
                return ((global::System.Drawing.Color)(this["BkColorFound"]));
            }
            set {
                this["BkColorFound"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string VisibleColumns {
            get {
                return ((string)(this["VisibleColumns"]));
            }
            set {
                this["VisibleColumns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DeferredScrolling {
            get {
                return ((bool)(this["DeferredScrolling"]));
            }
            set {
                this["DeferredScrolling"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public int ColumnNameWidth {
            get {
                return ((int)(this["ColumnNameWidth"]));
            }
            set {
                this["ColumnNameWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ColumnOwnerWidth {
            get {
                return ((int)(this["ColumnOwnerWidth"]));
            }
            set {
                this["ColumnOwnerWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ColumnCountryWidth {
            get {
                return ((int)(this["ColumnCountryWidth"]));
            }
            set {
                this["ColumnCountryWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ColumnStateWidth {
            get {
                return ((int)(this["ColumnStateWidth"]));
            }
            set {
                this["ColumnStateWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ColumnCityWidth {
            get {
                return ((int)(this["ColumnCityWidth"]));
            }
            set {
                this["ColumnCityWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 255, 128")]
        public global::System.Drawing.Color BkColorOwned {
            get {
                return ((global::System.Drawing.Color)(this["BkColorOwned"]));
            }
            set {
                this["BkColorOwned"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ColumnOrder {
            get {
                return ((string)(this["ColumnOrder"]));
            }
            set {
                this["ColumnOrder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int SortOnColumnIndex {
            get {
                return ((int)(this["SortOnColumnIndex"]));
            }
            set {
                this["SortOnColumnIndex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int SortDirection {
            get {
                return ((int)(this["SortDirection"]));
            }
            set {
                this["SortDirection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public string ColumnPersonalNoteWidth {
            get {
                return ((string)(this["ColumnPersonalNoteWidth"]));
            }
            set {
                this["ColumnPersonalNoteWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool EnableAutomaticSorting {
            get {
                return ((bool)(this["EnableAutomaticSorting"]));
            }
            set {
                this["EnableAutomaticSorting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100")]
        public int ColumnGeocacheTypeWidth {
            get {
                return ((int)(this["ColumnGeocacheTypeWidth"]));
            }
            set {
                this["ColumnGeocacheTypeWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("300")]
        public int ColumnHintsWidth {
            get {
                return ((int)(this["ColumnHintsWidth"]));
            }
            set {
                this["ColumnHintsWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoTopPanel {
            get {
                return ((bool)(this["AutoTopPanel"]));
            }
            set {
                this["AutoTopPanel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color BkColorExtraCoord {
            get {
                return ((global::System.Drawing.Color)(this["BkColorExtraCoord"]));
            }
            set {
                this["BkColorExtraCoord"] = value;
            }
        }
    }
}
